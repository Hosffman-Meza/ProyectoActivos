//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_DBADM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ControlActivosEntities_ : DbContext
    {
        public ControlActivosEntities_()
            : base("name=ControlActivosEntities_")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<SP_TipoEdificioConstru_update_Result> SP_TipoEdificioConstru_update_Result(Nullable<int> idTipoEdificioConstruido, string nombreTipoEdificio, string descripcion)
        {
            var idTipoEdificioConstruidoParameter = idTipoEdificioConstruido.HasValue ?
                new ObjectParameter("IdTipoEdificioConstruido", idTipoEdificioConstruido) :
                new ObjectParameter("IdTipoEdificioConstruido", typeof(int));
    
            var nombreTipoEdificioParameter = nombreTipoEdificio != null ?
                new ObjectParameter("NombreTipoEdificio", nombreTipoEdificio) :
                new ObjectParameter("NombreTipoEdificio", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TipoEdificioConstru_update_Result>("SP_TipoEdificioConstru_update_Result", idTipoEdificioConstruidoParameter, nombreTipoEdificioParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<SP_TipoEdificioConstru_toList_Result> SP_TipoEdificioConstru_toList_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TipoEdificioConstru_toList_Result>("SP_TipoEdificioConstru_toList_Result");
        }
    
        public virtual ObjectResult<SP_TipoEdificioConstru_insert_Result> SP_TipoEdificioConstru_insert_Result(string nombreTipoEdificio, string descripcion)
        {
            var nombreTipoEdificioParameter = nombreTipoEdificio != null ?
                new ObjectParameter("NombreTipoEdificio", nombreTipoEdificio) :
                new ObjectParameter("NombreTipoEdificio", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TipoEdificioConstru_insert_Result>("SP_TipoEdificioConstru_insert_Result", nombreTipoEdificioParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<SP_TipoEdificioConstru_detail_Result> SP_TipoEdificioConstru_detail_Result(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TipoEdificioConstru_detail_Result>("SP_TipoEdificioConstru_detail_Result", idParameter);
        }
    
        public virtual ObjectResult<SP_TipoEdificioConstru_delte_Result> SP_TipoEdificioConstru_delte_Result(Nullable<int> idTipoEdificioConstruido)
        {
            var idTipoEdificioConstruidoParameter = idTipoEdificioConstruido.HasValue ?
                new ObjectParameter("IdTipoEdificioConstruido", idTipoEdificioConstruido) :
                new ObjectParameter("IdTipoEdificioConstruido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TipoEdificioConstru_delte_Result>("SP_TipoEdificioConstru_delte_Result", idTipoEdificioConstruidoParameter);
        }
    
        public virtual ObjectResult<SP_Sectores_update_Result> SP_Sectores_update_Result(string idSector, string descripcionSector, string newIdSector)
        {
            var idSectorParameter = idSector != null ?
                new ObjectParameter("IdSector", idSector) :
                new ObjectParameter("IdSector", typeof(string));
    
            var descripcionSectorParameter = descripcionSector != null ?
                new ObjectParameter("DescripcionSector", descripcionSector) :
                new ObjectParameter("DescripcionSector", typeof(string));
    
            var newIdSectorParameter = newIdSector != null ?
                new ObjectParameter("NewIdSector", newIdSector) :
                new ObjectParameter("NewIdSector", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Sectores_update_Result>("SP_Sectores_update_Result", idSectorParameter, descripcionSectorParameter, newIdSectorParameter);
        }
    
        public virtual ObjectResult<SP_Sectores_toList_Result> SP_Sectores_toList_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Sectores_toList_Result>("SP_Sectores_toList_Result");
        }
    
        public virtual ObjectResult<SP_Sectores_insert_Result> SP_Sectores_insert_Result(string idSector, string descripcionSector)
        {
            var idSectorParameter = idSector != null ?
                new ObjectParameter("IdSector", idSector) :
                new ObjectParameter("IdSector", typeof(string));
    
            var descripcionSectorParameter = descripcionSector != null ?
                new ObjectParameter("DescripcionSector", descripcionSector) :
                new ObjectParameter("DescripcionSector", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Sectores_insert_Result>("SP_Sectores_insert_Result", idSectorParameter, descripcionSectorParameter);
        }
    
        public virtual ObjectResult<SP_Sectores_detail_Result> SP_Sectores_detail_Result(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Sectores_detail_Result>("SP_Sectores_detail_Result", idParameter);
        }
    
        public virtual ObjectResult<SP_Sectores_delete_Result> SP_Sectores_delete_Result(string idSector)
        {
            var idSectorParameter = idSector != null ?
                new ObjectParameter("IdSector", idSector) :
                new ObjectParameter("IdSector", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Sectores_delete_Result>("SP_Sectores_delete_Result", idSectorParameter);
        }
    
        public virtual ObjectResult<SP_MetDepre_update_Result> SP_MetDepre_update_Result(Nullable<int> idMetodosDepreciación, string nombreMetodoDepreciación, string caracteristicaMetodo)
        {
            var idMetodosDepreciaciónParameter = idMetodosDepreciación.HasValue ?
                new ObjectParameter("IdMetodosDepreciación", idMetodosDepreciación) :
                new ObjectParameter("IdMetodosDepreciación", typeof(int));
    
            var nombreMetodoDepreciaciónParameter = nombreMetodoDepreciación != null ?
                new ObjectParameter("NombreMetodoDepreciación", nombreMetodoDepreciación) :
                new ObjectParameter("NombreMetodoDepreciación", typeof(string));
    
            var caracteristicaMetodoParameter = caracteristicaMetodo != null ?
                new ObjectParameter("CaracteristicaMetodo", caracteristicaMetodo) :
                new ObjectParameter("CaracteristicaMetodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MetDepre_update_Result>("SP_MetDepre_update_Result", idMetodosDepreciaciónParameter, nombreMetodoDepreciaciónParameter, caracteristicaMetodoParameter);
        }
    
        public virtual ObjectResult<SP_MetDepre_toList_Result> SP_MetDepre_toList_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MetDepre_toList_Result>("SP_MetDepre_toList_Result");
        }
    
        public virtual ObjectResult<SP_MetDepre_insert_Result> SP_MetDepre_insert_Result(string nombreMetodoDepreciación, string caracteristicaMetodo)
        {
            var nombreMetodoDepreciaciónParameter = nombreMetodoDepreciación != null ?
                new ObjectParameter("NombreMetodoDepreciación", nombreMetodoDepreciación) :
                new ObjectParameter("NombreMetodoDepreciación", typeof(string));
    
            var caracteristicaMetodoParameter = caracteristicaMetodo != null ?
                new ObjectParameter("CaracteristicaMetodo", caracteristicaMetodo) :
                new ObjectParameter("CaracteristicaMetodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MetDepre_insert_Result>("SP_MetDepre_insert_Result", nombreMetodoDepreciaciónParameter, caracteristicaMetodoParameter);
        }
    
        public virtual ObjectResult<SP_MetDepre_delete_Result> SP_MetDepre_delete_Result(Nullable<int> idMetodosDepreciación)
        {
            var idMetodosDepreciaciónParameter = idMetodosDepreciación.HasValue ?
                new ObjectParameter("IdMetodosDepreciación", idMetodosDepreciación) :
                new ObjectParameter("IdMetodosDepreciación", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MetDepre_delete_Result>("SP_MetDepre_delete_Result", idMetodosDepreciaciónParameter);
        }
    
        public virtual ObjectResult<SP_MetDepre_deatail_Result> SP_MetDepre_deatail_Result(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MetDepre_deatail_Result>("SP_MetDepre_deatail_Result", idParameter);
        }
    
        public virtual ObjectResult<SP_Entidad_update_Result> SP_Entidad_update_Result(Nullable<int> iDEntidad, string nombreEntidad, string direcciónEntidad, string telefonoEntidad, string emailEntidad, string rUCEntidad)
        {
            var iDEntidadParameter = iDEntidad.HasValue ?
                new ObjectParameter("IDEntidad", iDEntidad) :
                new ObjectParameter("IDEntidad", typeof(int));
    
            var nombreEntidadParameter = nombreEntidad != null ?
                new ObjectParameter("NombreEntidad", nombreEntidad) :
                new ObjectParameter("NombreEntidad", typeof(string));
    
            var direcciónEntidadParameter = direcciónEntidad != null ?
                new ObjectParameter("DirecciónEntidad", direcciónEntidad) :
                new ObjectParameter("DirecciónEntidad", typeof(string));
    
            var telefonoEntidadParameter = telefonoEntidad != null ?
                new ObjectParameter("TelefonoEntidad", telefonoEntidad) :
                new ObjectParameter("TelefonoEntidad", typeof(string));
    
            var emailEntidadParameter = emailEntidad != null ?
                new ObjectParameter("EmailEntidad", emailEntidad) :
                new ObjectParameter("EmailEntidad", typeof(string));
    
            var rUCEntidadParameter = rUCEntidad != null ?
                new ObjectParameter("RUCEntidad", rUCEntidad) :
                new ObjectParameter("RUCEntidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Entidad_update_Result>("SP_Entidad_update_Result", iDEntidadParameter, nombreEntidadParameter, direcciónEntidadParameter, telefonoEntidadParameter, emailEntidadParameter, rUCEntidadParameter);
        }
    
        public virtual ObjectResult<SP_Entidad_toList_Result> SP_Entidad_toList_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Entidad_toList_Result>("SP_Entidad_toList_Result");
        }
    
        public virtual ObjectResult<SP_Entidad_insert_Result> SP_Entidad_insert_Result(string nombreEntidad, string direcciónEntidad, string telefonoEntidad, string emailEntidad, string rUCEntidad)
        {
            var nombreEntidadParameter = nombreEntidad != null ?
                new ObjectParameter("NombreEntidad", nombreEntidad) :
                new ObjectParameter("NombreEntidad", typeof(string));
    
            var direcciónEntidadParameter = direcciónEntidad != null ?
                new ObjectParameter("DirecciónEntidad", direcciónEntidad) :
                new ObjectParameter("DirecciónEntidad", typeof(string));
    
            var telefonoEntidadParameter = telefonoEntidad != null ?
                new ObjectParameter("TelefonoEntidad", telefonoEntidad) :
                new ObjectParameter("TelefonoEntidad", typeof(string));
    
            var emailEntidadParameter = emailEntidad != null ?
                new ObjectParameter("EmailEntidad", emailEntidad) :
                new ObjectParameter("EmailEntidad", typeof(string));
    
            var rUCEntidadParameter = rUCEntidad != null ?
                new ObjectParameter("RUCEntidad", rUCEntidad) :
                new ObjectParameter("RUCEntidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Entidad_insert_Result>("SP_Entidad_insert_Result", nombreEntidadParameter, direcciónEntidadParameter, telefonoEntidadParameter, emailEntidadParameter, rUCEntidadParameter);
        }
    
        public virtual ObjectResult<SP_Entidad_detail_Result> SP_Entidad_detail_Result(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Entidad_detail_Result>("SP_Entidad_detail_Result", idParameter);
        }
    
        public virtual ObjectResult<SP_Entidad_delete_Result> SP_Entidad_delete_Result(Nullable<int> iDEntidad)
        {
            var iDEntidadParameter = iDEntidad.HasValue ?
                new ObjectParameter("IDEntidad", iDEntidad) :
                new ObjectParameter("IDEntidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Entidad_delete_Result>("SP_Entidad_delete_Result", iDEntidadParameter);
        }
    
        public virtual ObjectResult<SP_DepActEqui_update_Result> SP_DepActEqui_update_Result(Nullable<int> idDepartamentoActivoEquipo, string nombreDepartamentoAsignado)
        {
            var idDepartamentoActivoEquipoParameter = idDepartamentoActivoEquipo.HasValue ?
                new ObjectParameter("IdDepartamentoActivoEquipo", idDepartamentoActivoEquipo) :
                new ObjectParameter("IdDepartamentoActivoEquipo", typeof(int));
    
            var nombreDepartamentoAsignadoParameter = nombreDepartamentoAsignado != null ?
                new ObjectParameter("NombreDepartamentoAsignado", nombreDepartamentoAsignado) :
                new ObjectParameter("NombreDepartamentoAsignado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DepActEqui_update_Result>("SP_DepActEqui_update_Result", idDepartamentoActivoEquipoParameter, nombreDepartamentoAsignadoParameter);
        }
    
        public virtual ObjectResult<SP_DepActEqui_toList_Result> SP_DepActEqui_toList_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DepActEqui_toList_Result>("SP_DepActEqui_toList_Result");
        }
    
        public virtual ObjectResult<SP_DepActEqui_insert_Result> SP_DepActEqui_insert_Result(string nombreDepartamentoAsignado)
        {
            var nombreDepartamentoAsignadoParameter = nombreDepartamentoAsignado != null ?
                new ObjectParameter("NombreDepartamentoAsignado", nombreDepartamentoAsignado) :
                new ObjectParameter("NombreDepartamentoAsignado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DepActEqui_insert_Result>("SP_DepActEqui_insert_Result", nombreDepartamentoAsignadoParameter);
        }
    
        public virtual ObjectResult<SP_DepActEqui_detail_Result> SP_DepActEqui_detail_Result(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DepActEqui_detail_Result>("SP_DepActEqui_detail_Result", idParameter);
        }
    
        public virtual ObjectResult<SP_DepActEqui_delete_Result> SP_DepActEqui_delete_Result(Nullable<int> idDepartamentoActivoEquipo)
        {
            var idDepartamentoActivoEquipoParameter = idDepartamentoActivoEquipo.HasValue ?
                new ObjectParameter("IdDepartamentoActivoEquipo", idDepartamentoActivoEquipo) :
                new ObjectParameter("IdDepartamentoActivoEquipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DepActEqui_delete_Result>("SP_DepActEqui_delete_Result", idDepartamentoActivoEquipoParameter);
        }
    
        public virtual ObjectResult<SP_ActTerreno_update_Result> SP_ActTerreno_update_Result(Nullable<int> noRegistroActivosTerrenos, Nullable<System.DateTime> fechaDeAdquisicionActivosTerrenos, Nullable<double> tamañoDelTerrenoVsqr2ActivosTerrenos, Nullable<double> costoDeAdquisiciónActivosTerrenos, string experimentoDeReevaluaciónParaPlusvalía, Nullable<int> tasaCrecimiento, string códigoContableActivosTerrenos, Nullable<int> iDEntidad, string idSector, Nullable<int> idTipoEdificioConstruido, Nullable<System.DateTime> fechaDelAjustePorCréditoDePlusvalía, Nullable<double> valorDeLaPlusvalía, Nullable<double> costoTotalActualDelTerreno, Nullable<System.DateTime> fechaDeReevaluacionAplicada)
        {
            var noRegistroActivosTerrenosParameter = noRegistroActivosTerrenos.HasValue ?
                new ObjectParameter("NoRegistroActivosTerrenos", noRegistroActivosTerrenos) :
                new ObjectParameter("NoRegistroActivosTerrenos", typeof(int));
    
            var fechaDeAdquisicionActivosTerrenosParameter = fechaDeAdquisicionActivosTerrenos.HasValue ?
                new ObjectParameter("FechaDeAdquisicionActivosTerrenos", fechaDeAdquisicionActivosTerrenos) :
                new ObjectParameter("FechaDeAdquisicionActivosTerrenos", typeof(System.DateTime));
    
            var tamañoDelTerrenoVsqr2ActivosTerrenosParameter = tamañoDelTerrenoVsqr2ActivosTerrenos.HasValue ?
                new ObjectParameter("TamañoDelTerrenoVsqr2ActivosTerrenos", tamañoDelTerrenoVsqr2ActivosTerrenos) :
                new ObjectParameter("TamañoDelTerrenoVsqr2ActivosTerrenos", typeof(double));
    
            var costoDeAdquisiciónActivosTerrenosParameter = costoDeAdquisiciónActivosTerrenos.HasValue ?
                new ObjectParameter("CostoDeAdquisiciónActivosTerrenos", costoDeAdquisiciónActivosTerrenos) :
                new ObjectParameter("CostoDeAdquisiciónActivosTerrenos", typeof(double));
    
            var experimentoDeReevaluaciónParaPlusvalíaParameter = experimentoDeReevaluaciónParaPlusvalía != null ?
                new ObjectParameter("ExperimentoDeReevaluaciónParaPlusvalía", experimentoDeReevaluaciónParaPlusvalía) :
                new ObjectParameter("ExperimentoDeReevaluaciónParaPlusvalía", typeof(string));
    
            var tasaCrecimientoParameter = tasaCrecimiento.HasValue ?
                new ObjectParameter("TasaCrecimiento", tasaCrecimiento) :
                new ObjectParameter("TasaCrecimiento", typeof(int));
    
            var códigoContableActivosTerrenosParameter = códigoContableActivosTerrenos != null ?
                new ObjectParameter("CódigoContableActivosTerrenos", códigoContableActivosTerrenos) :
                new ObjectParameter("CódigoContableActivosTerrenos", typeof(string));
    
            var iDEntidadParameter = iDEntidad.HasValue ?
                new ObjectParameter("IDEntidad", iDEntidad) :
                new ObjectParameter("IDEntidad", typeof(int));
    
            var idSectorParameter = idSector != null ?
                new ObjectParameter("IdSector", idSector) :
                new ObjectParameter("IdSector", typeof(string));
    
            var idTipoEdificioConstruidoParameter = idTipoEdificioConstruido.HasValue ?
                new ObjectParameter("IdTipoEdificioConstruido", idTipoEdificioConstruido) :
                new ObjectParameter("IdTipoEdificioConstruido", typeof(int));
    
            var fechaDelAjustePorCréditoDePlusvalíaParameter = fechaDelAjustePorCréditoDePlusvalía.HasValue ?
                new ObjectParameter("FechaDelAjustePorCréditoDePlusvalía", fechaDelAjustePorCréditoDePlusvalía) :
                new ObjectParameter("FechaDelAjustePorCréditoDePlusvalía", typeof(System.DateTime));
    
            var valorDeLaPlusvalíaParameter = valorDeLaPlusvalía.HasValue ?
                new ObjectParameter("ValorDeLaPlusvalía", valorDeLaPlusvalía) :
                new ObjectParameter("ValorDeLaPlusvalía", typeof(double));
    
            var costoTotalActualDelTerrenoParameter = costoTotalActualDelTerreno.HasValue ?
                new ObjectParameter("CostoTotalActualDelTerreno", costoTotalActualDelTerreno) :
                new ObjectParameter("CostoTotalActualDelTerreno", typeof(double));
    
            var fechaDeReevaluacionAplicadaParameter = fechaDeReevaluacionAplicada.HasValue ?
                new ObjectParameter("FechaDeReevaluacionAplicada", fechaDeReevaluacionAplicada) :
                new ObjectParameter("FechaDeReevaluacionAplicada", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActTerreno_update_Result>("SP_ActTerreno_update_Result", noRegistroActivosTerrenosParameter, fechaDeAdquisicionActivosTerrenosParameter, tamañoDelTerrenoVsqr2ActivosTerrenosParameter, costoDeAdquisiciónActivosTerrenosParameter, experimentoDeReevaluaciónParaPlusvalíaParameter, tasaCrecimientoParameter, códigoContableActivosTerrenosParameter, iDEntidadParameter, idSectorParameter, idTipoEdificioConstruidoParameter, fechaDelAjustePorCréditoDePlusvalíaParameter, valorDeLaPlusvalíaParameter, costoTotalActualDelTerrenoParameter, fechaDeReevaluacionAplicadaParameter);
        }
    
        public virtual ObjectResult<SP_ActTerreno_toList_Result> SP_ActTerreno_toList_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActTerreno_toList_Result>("SP_ActTerreno_toList_Result");
        }
    
        public virtual ObjectResult<SP_ActTerreno_insert_Result> SP_ActTerreno_insert_Result(Nullable<int> noRegistroActivosTerrenos, Nullable<System.DateTime> fechaDeAdquisicionActivosTerrenos, Nullable<double> tamañoDelTerrenoVsqr2ActivosTerrenos, Nullable<double> costoDeAdquisiciónActivosTerrenos, string experimentoDeReevaluaciónParaPlusvalía, Nullable<int> tasaCrecimiento, string códigoContableActivosTerrenos, Nullable<int> iDEntidad, string idSector, Nullable<int> idTipoEdificioConstruido, Nullable<double> valorDeLaPlusvalía, Nullable<System.DateTime> fechaDeReevaluacionAplicada)
        {
            var noRegistroActivosTerrenosParameter = noRegistroActivosTerrenos.HasValue ?
                new ObjectParameter("NoRegistroActivosTerrenos", noRegistroActivosTerrenos) :
                new ObjectParameter("NoRegistroActivosTerrenos", typeof(int));
    
            var fechaDeAdquisicionActivosTerrenosParameter = fechaDeAdquisicionActivosTerrenos.HasValue ?
                new ObjectParameter("FechaDeAdquisicionActivosTerrenos", fechaDeAdquisicionActivosTerrenos) :
                new ObjectParameter("FechaDeAdquisicionActivosTerrenos", typeof(System.DateTime));
    
            var tamañoDelTerrenoVsqr2ActivosTerrenosParameter = tamañoDelTerrenoVsqr2ActivosTerrenos.HasValue ?
                new ObjectParameter("TamañoDelTerrenoVsqr2ActivosTerrenos", tamañoDelTerrenoVsqr2ActivosTerrenos) :
                new ObjectParameter("TamañoDelTerrenoVsqr2ActivosTerrenos", typeof(double));
    
            var costoDeAdquisiciónActivosTerrenosParameter = costoDeAdquisiciónActivosTerrenos.HasValue ?
                new ObjectParameter("CostoDeAdquisiciónActivosTerrenos", costoDeAdquisiciónActivosTerrenos) :
                new ObjectParameter("CostoDeAdquisiciónActivosTerrenos", typeof(double));
    
            var experimentoDeReevaluaciónParaPlusvalíaParameter = experimentoDeReevaluaciónParaPlusvalía != null ?
                new ObjectParameter("ExperimentoDeReevaluaciónParaPlusvalía", experimentoDeReevaluaciónParaPlusvalía) :
                new ObjectParameter("ExperimentoDeReevaluaciónParaPlusvalía", typeof(string));
    
            var tasaCrecimientoParameter = tasaCrecimiento.HasValue ?
                new ObjectParameter("TasaCrecimiento", tasaCrecimiento) :
                new ObjectParameter("TasaCrecimiento", typeof(int));
    
            var códigoContableActivosTerrenosParameter = códigoContableActivosTerrenos != null ?
                new ObjectParameter("CódigoContableActivosTerrenos", códigoContableActivosTerrenos) :
                new ObjectParameter("CódigoContableActivosTerrenos", typeof(string));
    
            var iDEntidadParameter = iDEntidad.HasValue ?
                new ObjectParameter("IDEntidad", iDEntidad) :
                new ObjectParameter("IDEntidad", typeof(int));
    
            var idSectorParameter = idSector != null ?
                new ObjectParameter("IdSector", idSector) :
                new ObjectParameter("IdSector", typeof(string));
    
            var idTipoEdificioConstruidoParameter = idTipoEdificioConstruido.HasValue ?
                new ObjectParameter("IdTipoEdificioConstruido", idTipoEdificioConstruido) :
                new ObjectParameter("IdTipoEdificioConstruido", typeof(int));
    
            var valorDeLaPlusvalíaParameter = valorDeLaPlusvalía.HasValue ?
                new ObjectParameter("ValorDeLaPlusvalía", valorDeLaPlusvalía) :
                new ObjectParameter("ValorDeLaPlusvalía", typeof(double));
    
            var fechaDeReevaluacionAplicadaParameter = fechaDeReevaluacionAplicada.HasValue ?
                new ObjectParameter("FechaDeReevaluacionAplicada", fechaDeReevaluacionAplicada) :
                new ObjectParameter("FechaDeReevaluacionAplicada", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActTerreno_insert_Result>("SP_ActTerreno_insert_Result", noRegistroActivosTerrenosParameter, fechaDeAdquisicionActivosTerrenosParameter, tamañoDelTerrenoVsqr2ActivosTerrenosParameter, costoDeAdquisiciónActivosTerrenosParameter, experimentoDeReevaluaciónParaPlusvalíaParameter, tasaCrecimientoParameter, códigoContableActivosTerrenosParameter, iDEntidadParameter, idSectorParameter, idTipoEdificioConstruidoParameter, valorDeLaPlusvalíaParameter, fechaDeReevaluacionAplicadaParameter);
        }
    
        public virtual ObjectResult<SP_ActTerreno_detail_Result> SP_ActTerreno_detail_Result(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActTerreno_detail_Result>("SP_ActTerreno_detail_Result", idParameter);
        }
    
        public virtual ObjectResult<SP_ActMobEquipo_update_Result> SP_ActMobEquipo_update_Result(Nullable<int> iDMobiliarioEquipoOficina, string nombreMobiliarioEquiposOficina, string característicasDelBien, Nullable<double> costosDeAdquisición, Nullable<System.DateTime> fechaDeAdquisición, string marcaDelBien, string referenciasTécnicasDelBien, Nullable<int> tiempoDeVidaEstimada, string codificacionCostoDeAdquisición, string codificaciónParaDepreciaciónAcumulada, string característicasGeneralesDelActivo, string codificaciónDelControlador, Nullable<int> iDEntidad, Nullable<int> idMetodosDepreciación, Nullable<int> idDepartamentoActivoEquipo, Nullable<System.DateTime> fechaDepresiado)
        {
            var iDMobiliarioEquipoOficinaParameter = iDMobiliarioEquipoOficina.HasValue ?
                new ObjectParameter("IDMobiliarioEquipoOficina", iDMobiliarioEquipoOficina) :
                new ObjectParameter("IDMobiliarioEquipoOficina", typeof(int));
    
            var nombreMobiliarioEquiposOficinaParameter = nombreMobiliarioEquiposOficina != null ?
                new ObjectParameter("NombreMobiliarioEquiposOficina", nombreMobiliarioEquiposOficina) :
                new ObjectParameter("NombreMobiliarioEquiposOficina", typeof(string));
    
            var característicasDelBienParameter = característicasDelBien != null ?
                new ObjectParameter("CaracterísticasDelBien", característicasDelBien) :
                new ObjectParameter("CaracterísticasDelBien", typeof(string));
    
            var costosDeAdquisiciónParameter = costosDeAdquisición.HasValue ?
                new ObjectParameter("CostosDeAdquisición", costosDeAdquisición) :
                new ObjectParameter("CostosDeAdquisición", typeof(double));
    
            var fechaDeAdquisiciónParameter = fechaDeAdquisición.HasValue ?
                new ObjectParameter("FechaDeAdquisición", fechaDeAdquisición) :
                new ObjectParameter("FechaDeAdquisición", typeof(System.DateTime));
    
            var marcaDelBienParameter = marcaDelBien != null ?
                new ObjectParameter("MarcaDelBien", marcaDelBien) :
                new ObjectParameter("MarcaDelBien", typeof(string));
    
            var referenciasTécnicasDelBienParameter = referenciasTécnicasDelBien != null ?
                new ObjectParameter("ReferenciasTécnicasDelBien", referenciasTécnicasDelBien) :
                new ObjectParameter("ReferenciasTécnicasDelBien", typeof(string));
    
            var tiempoDeVidaEstimadaParameter = tiempoDeVidaEstimada.HasValue ?
                new ObjectParameter("TiempoDeVidaEstimada", tiempoDeVidaEstimada) :
                new ObjectParameter("TiempoDeVidaEstimada", typeof(int));
    
            var codificacionCostoDeAdquisiciónParameter = codificacionCostoDeAdquisición != null ?
                new ObjectParameter("CodificacionCostoDeAdquisición", codificacionCostoDeAdquisición) :
                new ObjectParameter("CodificacionCostoDeAdquisición", typeof(string));
    
            var codificaciónParaDepreciaciónAcumuladaParameter = codificaciónParaDepreciaciónAcumulada != null ?
                new ObjectParameter("CodificaciónParaDepreciaciónAcumulada", codificaciónParaDepreciaciónAcumulada) :
                new ObjectParameter("CodificaciónParaDepreciaciónAcumulada", typeof(string));
    
            var característicasGeneralesDelActivoParameter = característicasGeneralesDelActivo != null ?
                new ObjectParameter("CaracterísticasGeneralesDelActivo", característicasGeneralesDelActivo) :
                new ObjectParameter("CaracterísticasGeneralesDelActivo", typeof(string));
    
            var codificaciónDelControladorParameter = codificaciónDelControlador != null ?
                new ObjectParameter("CodificaciónDelControlador", codificaciónDelControlador) :
                new ObjectParameter("CodificaciónDelControlador", typeof(string));
    
            var iDEntidadParameter = iDEntidad.HasValue ?
                new ObjectParameter("IDEntidad", iDEntidad) :
                new ObjectParameter("IDEntidad", typeof(int));
    
            var idMetodosDepreciaciónParameter = idMetodosDepreciación.HasValue ?
                new ObjectParameter("IdMetodosDepreciación", idMetodosDepreciación) :
                new ObjectParameter("IdMetodosDepreciación", typeof(int));
    
            var idDepartamentoActivoEquipoParameter = idDepartamentoActivoEquipo.HasValue ?
                new ObjectParameter("IdDepartamentoActivoEquipo", idDepartamentoActivoEquipo) :
                new ObjectParameter("IdDepartamentoActivoEquipo", typeof(int));
    
            var fechaDepresiadoParameter = fechaDepresiado.HasValue ?
                new ObjectParameter("FechaDepresiado", fechaDepresiado) :
                new ObjectParameter("FechaDepresiado", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActMobEquipo_update_Result>("SP_ActMobEquipo_update_Result", iDMobiliarioEquipoOficinaParameter, nombreMobiliarioEquiposOficinaParameter, característicasDelBienParameter, costosDeAdquisiciónParameter, fechaDeAdquisiciónParameter, marcaDelBienParameter, referenciasTécnicasDelBienParameter, tiempoDeVidaEstimadaParameter, codificacionCostoDeAdquisiciónParameter, codificaciónParaDepreciaciónAcumuladaParameter, característicasGeneralesDelActivoParameter, codificaciónDelControladorParameter, iDEntidadParameter, idMetodosDepreciaciónParameter, idDepartamentoActivoEquipoParameter, fechaDepresiadoParameter);
        }
    
        public virtual ObjectResult<SP_ActMobEquipo_toList_Result> SP_ActMobEquipo_toList_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActMobEquipo_toList_Result>("SP_ActMobEquipo_toList_Result");
        }
    
        public virtual ObjectResult<SP_ActMobEquipo_insert_Result> SP_ActMobEquipo_insert_Result(Nullable<int> iDMobiliarioEquipoOficina, string nombreMobiliarioEquiposOficina, string característicasDelBien, Nullable<double> costosDeAdquisición, Nullable<System.DateTime> fechaDeAdquisición, string marcaDelBien, string referenciasTécnicasDelBien, Nullable<int> tiempoDeVidaEstimada, string codificacionCostoDeAdquisición, string codificaciónParaDepreciaciónAcumulada, string característicasGeneralesDelActivo, string codificaciónDelControlador, Nullable<int> iDEntidad, Nullable<int> idMetodosDepreciación, Nullable<int> idDepartamentoActivoEquipo, Nullable<double> valorDeDepreciaciónAnual, Nullable<System.DateTime> fechaDepresiado)
        {
            var iDMobiliarioEquipoOficinaParameter = iDMobiliarioEquipoOficina.HasValue ?
                new ObjectParameter("IDMobiliarioEquipoOficina", iDMobiliarioEquipoOficina) :
                new ObjectParameter("IDMobiliarioEquipoOficina", typeof(int));
    
            var nombreMobiliarioEquiposOficinaParameter = nombreMobiliarioEquiposOficina != null ?
                new ObjectParameter("NombreMobiliarioEquiposOficina", nombreMobiliarioEquiposOficina) :
                new ObjectParameter("NombreMobiliarioEquiposOficina", typeof(string));
    
            var característicasDelBienParameter = característicasDelBien != null ?
                new ObjectParameter("CaracterísticasDelBien", característicasDelBien) :
                new ObjectParameter("CaracterísticasDelBien", typeof(string));
    
            var costosDeAdquisiciónParameter = costosDeAdquisición.HasValue ?
                new ObjectParameter("CostosDeAdquisición", costosDeAdquisición) :
                new ObjectParameter("CostosDeAdquisición", typeof(double));
    
            var fechaDeAdquisiciónParameter = fechaDeAdquisición.HasValue ?
                new ObjectParameter("FechaDeAdquisición", fechaDeAdquisición) :
                new ObjectParameter("FechaDeAdquisición", typeof(System.DateTime));
    
            var marcaDelBienParameter = marcaDelBien != null ?
                new ObjectParameter("MarcaDelBien", marcaDelBien) :
                new ObjectParameter("MarcaDelBien", typeof(string));
    
            var referenciasTécnicasDelBienParameter = referenciasTécnicasDelBien != null ?
                new ObjectParameter("ReferenciasTécnicasDelBien", referenciasTécnicasDelBien) :
                new ObjectParameter("ReferenciasTécnicasDelBien", typeof(string));
    
            var tiempoDeVidaEstimadaParameter = tiempoDeVidaEstimada.HasValue ?
                new ObjectParameter("TiempoDeVidaEstimada", tiempoDeVidaEstimada) :
                new ObjectParameter("TiempoDeVidaEstimada", typeof(int));
    
            var codificacionCostoDeAdquisiciónParameter = codificacionCostoDeAdquisición != null ?
                new ObjectParameter("CodificacionCostoDeAdquisición", codificacionCostoDeAdquisición) :
                new ObjectParameter("CodificacionCostoDeAdquisición", typeof(string));
    
            var codificaciónParaDepreciaciónAcumuladaParameter = codificaciónParaDepreciaciónAcumulada != null ?
                new ObjectParameter("CodificaciónParaDepreciaciónAcumulada", codificaciónParaDepreciaciónAcumulada) :
                new ObjectParameter("CodificaciónParaDepreciaciónAcumulada", typeof(string));
    
            var característicasGeneralesDelActivoParameter = característicasGeneralesDelActivo != null ?
                new ObjectParameter("CaracterísticasGeneralesDelActivo", característicasGeneralesDelActivo) :
                new ObjectParameter("CaracterísticasGeneralesDelActivo", typeof(string));
    
            var codificaciónDelControladorParameter = codificaciónDelControlador != null ?
                new ObjectParameter("CodificaciónDelControlador", codificaciónDelControlador) :
                new ObjectParameter("CodificaciónDelControlador", typeof(string));
    
            var iDEntidadParameter = iDEntidad.HasValue ?
                new ObjectParameter("IDEntidad", iDEntidad) :
                new ObjectParameter("IDEntidad", typeof(int));
    
            var idMetodosDepreciaciónParameter = idMetodosDepreciación.HasValue ?
                new ObjectParameter("IdMetodosDepreciación", idMetodosDepreciación) :
                new ObjectParameter("IdMetodosDepreciación", typeof(int));
    
            var idDepartamentoActivoEquipoParameter = idDepartamentoActivoEquipo.HasValue ?
                new ObjectParameter("IdDepartamentoActivoEquipo", idDepartamentoActivoEquipo) :
                new ObjectParameter("IdDepartamentoActivoEquipo", typeof(int));
    
            var valorDeDepreciaciónAnualParameter = valorDeDepreciaciónAnual.HasValue ?
                new ObjectParameter("ValorDeDepreciaciónAnual", valorDeDepreciaciónAnual) :
                new ObjectParameter("ValorDeDepreciaciónAnual", typeof(double));
    
            var fechaDepresiadoParameter = fechaDepresiado.HasValue ?
                new ObjectParameter("FechaDepresiado", fechaDepresiado) :
                new ObjectParameter("FechaDepresiado", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActMobEquipo_insert_Result>("SP_ActMobEquipo_insert_Result", iDMobiliarioEquipoOficinaParameter, nombreMobiliarioEquiposOficinaParameter, característicasDelBienParameter, costosDeAdquisiciónParameter, fechaDeAdquisiciónParameter, marcaDelBienParameter, referenciasTécnicasDelBienParameter, tiempoDeVidaEstimadaParameter, codificacionCostoDeAdquisiciónParameter, codificaciónParaDepreciaciónAcumuladaParameter, característicasGeneralesDelActivoParameter, codificaciónDelControladorParameter, iDEntidadParameter, idMetodosDepreciaciónParameter, idDepartamentoActivoEquipoParameter, valorDeDepreciaciónAnualParameter, fechaDepresiadoParameter);
        }
    
        public virtual ObjectResult<SP_ActMobEquipo_detail_Result> SP_ActMobEquipo_detail_Result(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActMobEquipo_detail_Result>("SP_ActMobEquipo_detail_Result", idParameter);
        }
    
        public virtual ObjectResult<SP_ActMobEquipo_delete_Result> SP_ActMobEquipo_delete_Result(Nullable<int> iDMobiliarioEquipoOficina)
        {
            var iDMobiliarioEquipoOficinaParameter = iDMobiliarioEquipoOficina.HasValue ?
                new ObjectParameter("IDMobiliarioEquipoOficina", iDMobiliarioEquipoOficina) :
                new ObjectParameter("IDMobiliarioEquipoOficina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActMobEquipo_delete_Result>("SP_ActMobEquipo_delete_Result", iDMobiliarioEquipoOficinaParameter);
        }
    
        public virtual ObjectResult<SP_ActTerreno_delete_Result1> SP_ActTerreno_delete_Result(Nullable<int> noRegistroActivosTerrenos)
        {
            var noRegistroActivosTerrenosParameter = noRegistroActivosTerrenos.HasValue ?
                new ObjectParameter("NoRegistroActivosTerrenos", noRegistroActivosTerrenos) :
                new ObjectParameter("NoRegistroActivosTerrenos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActTerreno_delete_Result1>("SP_ActTerreno_delete_Result", noRegistroActivosTerrenosParameter);
        }
    
        public virtual ObjectResult<SP_ActMobEquipo_detail_v2_Result> SP_ActMobEquipo_detail_v2_Result(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActMobEquipo_detail_v2_Result>("SP_ActMobEquipo_detail_v2_Result", idParameter);
        }
    
        public virtual ObjectResult<SP_ActTerreno_detail_v2_Result> SP_ActTerreno_detail_v2_Result(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ActTerreno_detail_v2_Result>("SP_ActTerreno_detail_v2_Result", idParameter);
        }
    }
}
